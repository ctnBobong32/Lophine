From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Helvetica Volubi <suisuroru@blue-millennium.fun>
Date: Mon, 7 Jul 2025 18:19:00 +0800
Subject: [PATCH] Add config to enable waypoint command & bar


diff --git a/net/minecraft/commands/Commands.java b/net/minecraft/commands/Commands.java
index a5b59eb79c014ef7a48ff305ed554fc33a184d87..e8c7cc10f10fc013100fa66f3489ac98b3a29227 100644
--- a/net/minecraft/commands/Commands.java
+++ b/net/minecraft/commands/Commands.java
@@ -255,7 +255,11 @@ public class Commands {
         TimeCommand.register(this.dispatcher);
         TitleCommand.register(this.dispatcher, context);
         //TriggerCommand.register(this.dispatcher); // Folia - region threading - TODO later
-        //WaypointCommand.register(this.dispatcher, context); // Folia - region threading - TODO later
+        // Lophine start - unsafe waypoint bar
+        if (fun.bm.lophine.config.modules.experiment.CommandConfig.waypoint) {
+            WaypointCommand.register(this.dispatcher, context); // Folia - region threading - TODO later
+        }
+        // Lophine end - unsafe waypoint bar
         WeatherCommand.register(this.dispatcher);
         WorldBorderCommand.register(this.dispatcher);
         if (JvmProfiler.INSTANCE.isAvailable()) {
diff --git a/net/minecraft/server/waypoints/ServerWaypointManager.java b/net/minecraft/server/waypoints/ServerWaypointManager.java
index 0f8cacbb8fe55a60e2f0c98bf36c005b29f41a4b..52fd730998535ea071bfc99b7cc2c254b9b656d7 100644
--- a/net/minecraft/server/waypoints/ServerWaypointManager.java
+++ b/net/minecraft/server/waypoints/ServerWaypointManager.java
@@ -22,7 +22,14 @@ public class ServerWaypointManager implements WaypointManager<WaypointTransmitte
 
     @Override
     public void trackWaypoint(WaypointTransmitter waypoint) {
-        // Folia - region threading
+        // Lophine start - unsafe waypoint bar
+        if (!fun.bm.lophine.config.modules.experiment.CommandConfig.waypoint) return;
+        this.waypoints.add(waypoint);
+
+        for (ServerPlayer serverPlayer : this.players) {
+            this.createConnection(serverPlayer, waypoint);
+        }
+        // Lophine end - unsafe waypoint bar
     }
 
     @Override
@@ -50,14 +57,48 @@ public class ServerWaypointManager implements WaypointManager<WaypointTransmitte
 
     public void addPlayer(ServerPlayer player) {
         // Folia - region threading
+        // Lophine start - unsafe waypoint bar
+        if (!fun.bm.lophine.config.modules.experiment.CommandConfig.waypoint) return;
+        this.players.add(player);
+
+        for (WaypointTransmitter waypointTransmitter : this.waypoints) {
+            this.createConnection(player, waypointTransmitter);
+        }
+
+        if (player.isTransmittingWaypoint()) {
+            this.trackWaypoint((WaypointTransmitter)player);
+        }
+        // Lophine end - unsafe waypoint bar
     }
 
     public void updatePlayer(ServerPlayer player) {
         // Folia - region threading
+        // Lophine start - unsafe waypoint bar
+        if (!fun.bm.lophine.config.modules.experiment.CommandConfig.waypoint) return;
+        Map<WaypointTransmitter, WaypointTransmitter.Connection> map = this.connections.row(player);
+        SetView<WaypointTransmitter> set = Sets.difference(this.waypoints, map.keySet());
+
+        for (Entry<WaypointTransmitter, WaypointTransmitter.Connection> entry : ImmutableSet.copyOf(map.entrySet())) {
+            this.updateConnection(player, entry.getKey(), entry.getValue());
+        }
+
+        for (WaypointTransmitter waypointTransmitter : set) {
+            this.createConnection(player, waypointTransmitter);
+        }
+        // Lophine end - unsafe waypoint bar
     }
 
     public void removePlayer(ServerPlayer player) {
         // Folia - region threading
+        // Lophine start - unsafe waypoint bar
+        if (!fun.bm.lophine.config.modules.experiment.CommandConfig.waypoint) return;
+        this.connections.row(player).values().removeIf(connection -> {
+            connection.disconnect();
+            return true;
+        });
+        this.untrackWaypoint((WaypointTransmitter)player);
+        this.players.remove(player);
+        // Lophine end - unsafe waypoint bar
     }
 
     public void breakAllConnections() {
