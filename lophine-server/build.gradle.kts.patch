--- a/luminol-server/build.gradle.kts
+++ b/luminol-server/build.gradle.kts
@@ -52,7 +_,23 @@
         }
     }
 
-    activeFork = luminol
+    val lophine = forks.register("lophine") {
+        forks = luminol
+        upstream.patchRepo("paperServer") {
+            upstreamRepo = luminol.patchedRepo("paperServer")
+            patchesDir = rootDirectory.dir("lophine-server/paper-patches")
+            outputDir = rootDirectory.dir("paper-server")
+        }
+
+        upstream.patchDir("luminolServer") {
+            upstreamPath = "luminol-server"
+            excludes = setOf("src/minecraft", "paper-patches", "minecraft-patches", "build.gradle.kts", "build.gradle.kts.patch")
+            patchesDir = rootDirectory.dir("lophine-server/luminol-patches")
+            outputDir = rootDirectory.dir("luminol-server")
+        }
+    }
+
+    activeFork = lophine
 
 
     spigot {
@@ -142,12 +_,16 @@
         resources { srcDir("../paper-server/src/main/resources") }
         java { srcDir("../folia-server/src/main/java") }
         resources { srcDir("../folia-server/src/main/resources") }
+        java { srcDir("../luminol-server/src/main/java") }
+        resources { srcDir("../luminol-server/src/main/resources") }
     }
     test {
         java { srcDir("../paper-server/src/test/java") }
         resources { srcDir("../paper-server/src/test/resources") }
         java { srcDir("../folia-server/src/test/java") }
         resources { srcDir("../folia-server/src/test/resources") }
+        java { srcDir("../luminol-server/src/main/java") }
+        resources { srcDir("../luminol-server/src/main/resources") }
     }
 }
 val log4jPlugins = sourceSets.create("log4jPlugins") {
@@ -174,7 +_,7 @@
 }
 
 dependencies {
-    implementation(project(":luminol-api")) // Luminol
+    implementation(project(":lophine-api")) // Lophine
     // Luminol start - Dependenices insert
     implementation("com.electronwill.night-config:toml:3.8.2") // Night config
     implementation("com.github.luben:zstd-jni:1.5.4-1")
@@ -264,14 +_,14 @@
         val gitBranch = git.exec(providers, "rev-parse", "--abbrev-ref", "HEAD").get().trim()
         attributes(
             "Main-Class" to "org.bukkit.craftbukkit.Main",
-            "Implementation-Title" to "Luminol",
+            "Implementation-Title" to "Lophine",
             "Implementation-Version" to implementationVersion,
             "Implementation-Vendor" to date,
-            "Specification-Title" to "Luminol",
+            "Specification-Title" to "Lophine",
             "Specification-Version" to project.version,
             "Specification-Vendor" to "Luminol Team",
-            "Brand-Id" to "luminolmc:luminol",
-            "Brand-Name" to "Luminol",
+            "Brand-Id" to "luminolmc:lophine",
+            "Brand-Name" to "Lophine",
             "Build-Number" to (build ?: ""),
             "Build-Time" to buildTime.toString(),
             "Git-Branch" to gitBranch,
